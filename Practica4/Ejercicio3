/*Se debe modelar el funcionamiento de una casa de comida r√°pida, en la cual trabajan 2
cocineros y 3 vendedores, y que debe atender a C clientes. El modelado debe considerar
que:
- Cada cliente realiza un pedido y luego espera a que se lo entreguen.
- Los pedidos que hacen los clientes son tomados por cualquiera de los vendedores y se
lo pasan a los cocineros para que realicen el plato. Cuando no hay pedidos para atender,
los vendedores aprovechan para reponer un pack de bebidas de la heladera (tardan entre
1 y 3 minutos para hacer esto).
- Repetidamente cada cocinero toma un pedido pendiente dejado por los vendedores, lo
cocina y se lo entrega directamente al cliente correspondiente.
Nota: maximizar la concurrencia.*/

chan mandarPedido(int, texto);
chan agarrarPlato[C](texto);
chan hacerPedido(int, texto);
chan mandarPedido(int, texto);


Process Cocineros[id: 0..1]{
    --tomar pedido
    --entregar pedido
    int idC;
    text pedido;
    text pedidoListo;
    while (true){
        receive mandarPedido(idC, pedido);
        pedidoListo = cocinar(pedido);
        send agarrarPlato[idC](pedidoListo);
    }
}

Process vendedores[id: 0..2]{
    int idC;
    texto pedido;
    while (true){
        if (not empty(hacerPedido)){
            receive hacerPedido(idC, pedido);
            send mandarPedido(idC, pedido);
        } else {
            delay(Random(60, 180));
        }
    }
}

Process Cliente[id: 0..C-1]{
    texto plato;
    //hace pedido
    text pedido = generarPedido();
    send hacerPedido(id, pedido);
    --esperar entrega
    receive agarrarPlato[id](plato);
}
