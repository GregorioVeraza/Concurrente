En una exposición aeronáutica hay un simulador de vuelo (que debe ser usado con
exclusión mutua) y un empleado encargado de administrar su uso. Hay P personas que
esperan a que el empleado lo deje acceder al simulador, lo usa por un rato y se retira.
a. Implemente una solución donde el empleado sólo se ocupa de garantizar que el
simulador es usado por una persona a la vez.
b. Modifique la solución anterior para que el empleado además considere el orden de
llegada para dar acceso al simulador.
Nota: cada persona usa sólo una vez el simulador. 

Process Persona[id: 0..P-1]{
    Buffer!llegue(id);
    Empleado?podesPasar();
    int tiempo = Random(); //representa el tiempo que usa el simulador
    Simulador!usar(tiempo);
}

Process Buffer{
    cola buffer;
    int id;
    do  Persona[*]?llegue(id) -> push(id);
    []  (not empty(buffer)); Empleado?quienSigue() -> Empleado!puedePasar(pop(buffer));
    od;
}
Process Empleado{
    while (true){
        Buffer!quienSigue();
        Buffer?puedePasar(idPersona);
        Persona[idPersona]!podesPasar();
        Simulador?siguiente();
    }
}

Process Simulador{
    int tiempo;
    while (true){
        Persona?usar(tiempo);
        delay(tiempo); //representa que la persona esta usando el simulador
        Empleado!siguiente();
    }
}
